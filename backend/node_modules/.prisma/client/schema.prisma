// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                            String        @id @default(uuid())
  name                          String
  email                         String        @unique
  password_hash                 String
  cpf                           String        @unique
  crm                           String
  crm_uf                        String
  is_admin                      Boolean       @default(false)
  is_email_verified             Boolean       @default(false)
  email_verification_token      String?       @unique
  email_verification_expires_at DateTime?
  stripe_customer_id            String?       @unique
  created_at                    DateTime      @default(now())
  updated_at                    DateTime      @updatedAt
  subscription                  Subscription?
  templates                     Template[]
  reports                       Report[]
  audit_logs                    AuditLog[]

  @@unique([crm, crm_uf])
}

model Subscription {
  id                     String             @id @default(uuid())
  user_id                String             @unique
  user                   User               @relation(fields: [user_id], references: [id], onDelete: Cascade)
  stripe_subscription_id String             @unique
  plan_type              String
  status                 SubscriptionStatus
  current_period_end     DateTime
  created_at             DateTime           @default(now())
  updated_at             DateTime           @updatedAt
}

model TemplateCategory {
  id        String     @id @default(uuid())
  name      String     @unique
  templates Template[]
  createdAt DateTime   @default(now())
}

model Template {
  id                     String            @id @default(uuid())
  name                   String
  report_title           String? // Novo campo para o título principal do laudo
  report_title_alignment String?           @default("center") // 'left', 'center', 'right'
  report_title_uppercase Boolean?          @default(true)
  report_title_bold      Boolean?          @default(true)
  created_by             User              @relation(fields: [created_by_id], references: [id])
  created_by_id          String
  category_id            String?
  category               TemplateCategory? @relation(fields: [category_id], references: [id])
  sections               TemplateSection[]
  actionRules            ActionRule[]
  reports                Report[]
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
}

model TemplateSection {
  id            String               @id @default(uuid())
  template_id   String
  template      Template             @relation(fields: [template_id], references: [id], onDelete: Cascade)
  title         String
  default_text  String?
  display_order Int
  subsections   TemplateSubsection[] // Nova relação para subseções
  reportData    ReportData[]
  createdAt     DateTime             @default(now())
}

model TemplateSubsection {
  id                String             @id @default(uuid())
  section_id        String
  section           TemplateSection    @relation(fields: [section_id], references: [id], onDelete: Cascade)
  title             String
  display_order     Int
  dynamicOptionSets DynamicOptionSet[] // Nova relação para conjuntos de opções dinâmicas
  createdAt         DateTime           @default(now())
}

model DynamicOptionSet {
  id            String               @id @default(uuid())
  subsection_id String
  subsection    TemplateSubsection   @relation(fields: [subsection_id], references: [id], onDelete: Cascade)
  title         String // e.g., 'Contraste'
  display_order Int
  elements      InteractiveElement[] // Elementos pertencentes a este conjunto
  createdAt     DateTime             @default(now())
}

model InteractiveElement {
  id                    String           @id @default(uuid())
  dynamic_option_set_id String // Novo campo para vincular ao DynamicOptionSet
  dynamicOptionSet      DynamicOptionSet @relation(fields: [dynamic_option_set_id], references: [id], onDelete: Cascade)
  source_action_id      String           @unique // ID único para a ação (e.g., 'nodulo_benigno_clique')
  type                  String // e.g., 'button', 'checkbox', 'text_input'
  label                 String // Texto exibido no elemento (e.g., 'Nódulo Benigno')
  default_value         String? // Valor inicial para inputs, ou estado para checkboxes
  is_default_selected   Boolean          @default(false)
  actionRule            ActionRule? // This side does not define fields/references for 1-to-1
  createdAt             DateTime         @default(now())
}

model ActionRule {
  id                        String             @id @default(uuid())
  template_id               String
  template                  Template           @relation(fields: [template_id], references: [id], onDelete: Cascade)
  source_action_id          String             @unique // ID único para a ação (e.g., 'nodulo_benigno_clique')
  target_section_id         String
  action_text_on_activate   String // Texto a ser adicionado/substituído quando ativado
  action_text_on_deactivate String? // Texto a ser removido/substituído quando desativado (opcional)
  interactiveElement        InteractiveElement @relation(fields: [source_action_id], references: [source_action_id])
  createdAt                 DateTime           @default(now())
}

model Report {
  id          String       @id @default(uuid())
  user_id     String
  user        User         @relation(fields: [user_id], references: [id])
  template_id String
  template    Template     @relation(fields: [template_id], references: [id])
  status      String       @default("draft")
  pdf_url     String?
  reportData  ReportData[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model ReportData {
  id         String          @id @default(uuid())
  report_id  String
  report     Report          @relation(fields: [report_id], references: [id], onDelete: Cascade)
  section_id String
  section    TemplateSection @relation(fields: [section_id], references: [id], onDelete: Cascade)
  content    String?

  @@unique([report_id, section_id])
}

model Letterhead {
  id               String   @id @default(uuid())
  name             String
  header_image_url String?
  footer_image_url String?
  createdAt        DateTime @default(now())
}

model AuditLog {
  id                   BigInt   @id @default(autoincrement())
  user_id              String
  user                 User     @relation(fields: [user_id], references: [id])
  action               String
  target_resource_id   String?
  target_resource_type String?
  ip_address           String?
  user_agent           String?
  data_snapshot        Json?
  timestamp            DateTime @default(now())
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  PAST_DUE
  TRIALING
}
